// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <Text
    style={
      Object {
        "color": "tomato",
        "fontSize": 32,
        "fontWeight": "bold",
        "paddingBottom": 10,
        "textAlign": "center",
      }
    }
  >
    Live commentary
  </Text>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "paddingHorizontal": 20,
        }
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View />
    </RCTScrollView>
  </View>
  <View
    style={
      Array [
        Object {
          "borderColor": "dodgerblue",
          "borderTopWidth": 2,
        },
        Object {
          "height": 200,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
    >
      <View
        style={
          Object {
            "width": 44,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "tomato",
            "fontSize": 24,
            "fontWeight": "bold",
            "textAlign": "center",
          }
        }
      >
        Key moments
      </Text>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 18,
            "borderWidth": 1,
            "height": 36,
            "justifyContent": "center",
            "opacity": 1,
            "transform": Array [
              Object {
                "rotate": "180deg",
              },
            ],
            "width": 36,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/chevron.png",
            }
          }
          style={
            Object {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "paddingTop": 20,
        }
      }
    />
  </View>
</RCTSafeAreaView>
`;
